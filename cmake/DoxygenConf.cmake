FIND_PACKAGE(Doxygen
    REQUIRED dot)

if (DOXYGEN_FOUND)
    SET(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/docs)
    SET(DOXYGEN_FULL_PATH_NAMES NO)
    SET(DOXYGEN_TAB_SIZE 3)
    SET(DOXYGEN_BUILTIN_STL_SUPPORT YES)
    SET(DOXYGEN_LOOKUP_CACHE_SIZE 5)
    SET(DOXYGEN_EXTRACT_PRIVATE YES)
    SET(DOXYGEN_SORT_MEMBERS_CTORS_1ST YES)
    SET(DOXYGEN_RECURSIVE YES)
    SET(DOXYGEN_IMAGE_PATH "${PROJECT_SOURCE_DIR}/doc_resources")
    SET(DOXYGEN_REFERENCED_BY_RELATION YES)
    SET(DOXYGEN_REFERENCES_RELATION YES)
    SET(DOXYGEN_GENERATE_TREEVIEW YES)
    SET(DOXYGEN_GENERATE_LATEX NO)
    SET(DOXYGEN_GENERATE_TAGFILE tag.txt)
    SET(DOXYGEN_CALL_GRAPH YES)
    SET(DOXYGEN_CALLER_GRAPH YES)
    SET(DOXYGEN_DOT_IMAGE_FORMAT svg)
    SET(DOXYGEN_INTERACTIVE_SVG YES)
    SET(DOXYGEN_PLANTUML_JAR_PATH "/usr/share/plantuml/plantuml.jar")
    SET(DOXYGEN_PLANTUML_INCLUDE_PATH "${PROJECT_SOURCE_DIR}/doc_resources")

    if (0)
        DOXYGEN_ADD_DOCS(doc
            ${DOXY_INPUT_DIRS}
            WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
            COMMENT "Generating documentation with Doxygen"
            )
    else()
        SET(DOXYGEN_PROJECT_NAME ${PROJECT_NAME})
        SET(DOXYGEN_PROJECT_NUMBER ${PROJECT_VERSION})
        SET(DOXYGEN_PROJECT_BRIEF ${PROJECT_DESCRIPTION})

        SET(DOXY_CONF_FILE ${CMAKE_BINARY_DIR}/DoxyConf)
        CONFIGURE_FILE(${CMAKE_MODULE_PATH}/DoxyConf.in ${DOXY_CONF_FILE} @ONLY)

        ADD_CUSTOM_TARGET(${DOC_TARGET_NAME}
            COMMAND ${DOXYGEN_EXECUTABLE} ${DOXY_CONF_FILE}
            WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
            COMMENT "Generating documentation with Doxygen"
            VERBATIM )
    endif()

    SET_PROPERTY(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${DOXYGEN_OUTPUT_DIRECTORY})
else (DOXYGEN_FOUND)
    MESSAGE("Doxygen was not found. Install Doxygen.")
endif (DOXYGEN_FOUND)